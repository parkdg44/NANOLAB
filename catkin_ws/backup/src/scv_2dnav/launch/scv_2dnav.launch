<launch>
  
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node" >
    <param name="port"  type="string" value="/dev/ttyUSB1"/>  
    <param name="baud" type="string" value="115200"/>
  </node>  
  
  
  <node pkg="test_mapping" name="get_imu" type="get_imu" output="screen">
    <param name="IMU_PORT"  type="string" value="/dev/ttyUSB0" />
  </node>  

  <node pkg="test_mapping" name="raw_data_to_tf" type="raw_data_to_tf"  />
  
  
  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode">
    <param name="serial_port"         type="string" value="/dev/ttyUSB2"/>
    <param name="serial_baudrate"     type="int"    value="115200"/>
    <param name="frame_id"            type="string" value="scan"/>
    <param name="inverted"            type="bool"   value="false"/>
    <param name="angle_compensate"    type="bool"   value="true"/>
  </node>
  
  <node pkg="gmapping" name="slam_gmapping" type="slam_gmapping"/>
  
  <node pkg="tf" type="static_transform_publisher" name="base_to_scan_broadcaster" args="0 0 0 3.1415 0 0 base_link scan 100" />


   <master auto="start"/>
   <!-- Run the map server --> 
    <node name="map_server" pkg="map_server" type="map_server" args="scv_2dnav/my_map.pgm my_map_resolution"/>

  <!--- Run AMCL --> 
    <include file="catkin_ws/src/navigation-kinetic/amcl/examples/amcl_omni.launch" />

   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="catkin_ws/src/scv_2dnav/yaml/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="catkin_ws/src/scv_2dnav/yaml/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="catkin_ws/src/scv_2dnav/yaml/local_costmap_params.yaml" command="load" />
    <rosparam file="catkin_ws/src/scv_2dnav/yaml/global_costmap_params.yaml" command="load" /> 
    <rosparam file="catkin_ws/src/scv_2dnav/yaml/base_local_planner_params.yaml" command="load" />
 </node>    

</launch>